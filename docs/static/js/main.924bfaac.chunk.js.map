{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","id","placeholder","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GiftGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oQAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,UAAU,YAAYC,SAXX,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACvCP,EAAc,OAOd,2BACIQ,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAAEP,GACxBH,EAAeG,EAAEQ,OAAOF,QAmBhBG,GAAG,eACHX,UAAU,uBACVY,YAAY,iBAM5BjB,EAAYkB,UAAY,CACpBjB,c,OAAekB,EAAUC,KAAKC,Y,2BCpCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRkB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPM,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAGlC,OACI,yBAAKpB,UAAU,8EACX,yBAAKiC,IAAMb,EAAMc,IAAML,IACvB,2BAAKA,KCJJM,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdrB,mBAAS,CAC/B4B,KAAM,GACNW,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WAENtB,EAASC,GACJsB,MAAO,SAAAC,GAEJC,YAAY,WACRJ,EAAS,CACLb,KAAMgB,EACNL,SAAS,MAEd,UAGZ,CAAClB,IAEGmB,EDlB0BM,CAAczB,GAAlCY,EAFwB,EAE7BL,KAAaW,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIpC,UAAU,sDAAsDkB,GAElEkB,GAAW,uBAAGpC,UAAU,wDAAb,eAEb,yBAAKA,UAAU,aAGP8B,EAAOH,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIgB,IAAKhB,EAAIjB,IACLiB,UEhBnBiB,EAAe,WAAO,IAAD,EAEMhD,mBAAS,CAAC,oCAFhB,mBAEvBiD,EAFuB,KAEXlD,EAFW,KAI9B,OACI,oCAEA,wBAAII,UAAU,uBAAsB,uBAAGA,UAAU,iBAAjD,mBAAoF,uBAAGA,UAAU,cACjG,kBAAC,EAAD,CAAaJ,cAAgBA,IAC7B,6BAEA,4BAEIkD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA0B,IAAK1B,EACLA,SAAWA,UCb3B6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.924bfaac.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"nes-field\" onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                id=\"inline_field\" \r\n                className=\"nes-input is-success\" \r\n                placeholder=\"Buscar Gif\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=SbrhrFVdz4cquwlEFbzAlwcDP57kTSxY`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({ title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__heartBeat nes-container is-rounded is-dark\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__pulse nes-text is-error\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash nes-text is-warning\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GiftGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then ( imgs  => {\r\n\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n            })\r\n\r\n    }, [category]);\r\n\r\n    return state; //{ data:[], loading: true };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Fullmetal Alchemist Brotherhood']);\r\n\r\n    return(\r\n        <>\r\n        \r\n        <h1 className=\"nes-text is-primary\"><i className=\"nes-squirtle\"></i> Gif Expert App <i className=\"nes-logo\"></i></h1>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <br />\r\n\r\n        <ol>\r\n            { \r\n            categories.map( category => (\r\n                <GifGrid \r\n                key={category}\r\n                category={ category } />\r\n            ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport 'nes.css/css/nes.min.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}